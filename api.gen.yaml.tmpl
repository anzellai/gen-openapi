{{- define "proto" -}}
{{- $type := dict "object" }}
{{- set $type "null" "null" -}}
{{- set $type "any" "any" -}}
{{- set $type "byte" "string" -}}
{{- set $type "bool" "boolean" -}}
{{- set $type "uint" "number" -}}
{{- set $type "uint8" "number" -}}
{{- set $type "uint16" "number" -}}
{{- set $type "uint32" "number" -}}
{{- set $type "uint64" "number" -}}
{{- set $type "int" "number" -}}
{{- set $type "int8" "number" -}}
{{- set $type "int16" "number" -}}
{{- set $type "int32" "number" -}}
{{- set $type "int64" "number" -}}
{{- set $type "float32" "number" -}}
{{- set $type "float64" "number" -}}
{{- set $type "string" "string" -}}
{{- set $type "timestamp" "string" -}}
{{- set $type "map" "object" -}}
{{- set $type "[]" "array" -}}

# {{.Name}} {{.SchemaVersion}} {{.SchemaHash}}
# --
# This file has been generated by webrpc-gen VERSION COMMAND
# Do not edit by hand. Update your webrpc schema and re-generate.
openapi: 3.0.0
info:
  title: {{(index .Services 0).Name}} API
  version: vTODO

components:
  schemas:
    empty:
      type: object
    error:
      properties:
        error:
          type: string
    {{- range $i, $msg := .Messages}}
    {{.Name}}:
      {{if eq (str .Type) "enum" -}}
      type: string
      {{if gt (len .Fields) 0}}description: Represented as {{(index .Fields 0).Type}} on the server side{{end}}
      enum:
        {{- range .Fields}}
        - {{.Name}}
        {{- end}}
      {{- else -}}
      {{if gt (len .Fields) 0}}properties:{{else}}type: object{{end}}
        {{range $i, $fields := .Fields -}}
        {{.Name}}:
          type: {{get $type .Type}}
        {{end}}
      {{end}}
    {{- end -}}
    {{- range .Services}}
    {{- range $i, $method := .Methods}}
    {{$method.Name}}_Request:
      {{if gt (len .Inputs) 0}}properties:{{else}}type: object{{end}}
      {{- range $i, $input := .Inputs}}
        {{.Name}}:
          type: {{get $type .Type}}
          description: {{.Type}}
      {{- end -}}
    {{- end -}}
    {{- range $i, $method := .Methods}}
    {{$method.Name}}_Response:
      {{if gt (len .Outputs) 0}}properties:{{else}}type: object{{end}}
      {{- range $i, $output := .Outputs}}
        {{.Name}}:
          type: {{get $type .Type}}
          description: {{.Type}}
        {{- end -}}
      {{- end -}}
    {{- end -}}

{{- range .Services -}}
{{- $serviceName:=.Name}}

paths:
  {{- range $i, $method := .Methods}}
  /rpc/{{$serviceName}}/{{.Name}}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {{if gt (len .Inputs) 0}}properties:{{else}}$ref: '#/components/schemas/empty'{{- end -}}
              {{range .Inputs}}
                {{.Name}}:
                  type: {{get $type .Type}}
                  description: {{.Type}}
              {{- end}}
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{$method.Name}}_Response'
                description:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  {{- end -}}
{{- end -}}
{{- end -}}