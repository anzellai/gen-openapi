{{- define "main" -}}

{{- if ne .WebrpcVersion "v1" -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc version %s\n" .WebrpcTarget .WebrpcVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- if not (minVersion .WebrpcGenVersion "v0.7.0") -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc-gen version %s, please update\n" .WebrpcTarget .WebrpcGenVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- /* Options with default values. */ -}}
{{- $opts := dict -}}
{{- set $opts "Title" (coalesce .Opts.Title (print (index .Services 0).Name " API")) -}}
{{- set $opts "Version" (coalesce .Opts.Version "") -}}
{{- set $opts "ServerUrl" (coalesce .Opts.ServerUrl "") -}}
{{- set $opts "ServerDescription" (coalesce .Opts.ServerDescription "") -}}

{{- /* Print help on -Help. */ -}}
{{- if exists .Opts "Help" -}}
  {{ template "help" $opts }}
  {{- exit 0 -}}
{{- end -}}

{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- stderrPrintf "  -%v=%q is not supported option\n" $k $v -}}
    {{- template "help" $opts -}}
    {{- exit 1 -}}
  {{- end -}}
{{- end -}}

{{- /* Type mapping. */ -}}
{{- $typeMap := dict }}
{{- set $typeMap "null" "null" -}}
{{- set $typeMap "any" "object" -}}
{{- set $typeMap "byte" "string" -}}
{{- set $typeMap "bool" "boolean" -}}
{{- set $typeMap "uint" "number" -}}
{{- set $typeMap "uint8" "number" -}}
{{- set $typeMap "uint16" "number" -}}
{{- set $typeMap "uint32" "number" -}}
{{- set $typeMap "uint64" "number" -}}
{{- set $typeMap "int" "number" -}}
{{- set $typeMap "int8" "number" -}}
{{- set $typeMap "int16" "number" -}}
{{- set $typeMap "int32" "number" -}}
{{- set $typeMap "int64" "number" -}}
{{- set $typeMap "float32" "number" -}}
{{- set $typeMap "float64" "number" -}}
{{- set $typeMap "string" "string" -}}
{{- set $typeMap "timestamp" "string" -}}
{{- set $typeMap "map" "object" -}}
{{- set $typeMap "[]" "array" -}}

# {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
# --
# Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator; DO NOT EDIT
# 
# {{.WebrpcGenCommand}}
openapi: 3.0.0
info:
  title: '{{ get $opts "Title" }}'
  version: '{{ get $opts "Version" }}'
{{ if or (exists $opts "ServerUrl") (exists $opts "ServerDescription") -}}
servers:
  - url: '{{ get $opts "ServerUrl" }}'
    description: '{{ get $opts "ServerDescription" }}'
{{ end -}}
components:
  schemas:
    empty:
      type: object
    error:
      properties:
        error:
          type: string
    {{- range $i, $msg := .Messages}}
    {{template "message" dict "Message" $msg "TypeMap" $typeMap }}
    {{- end -}}
    {{- range .Services}}
    {{- range $i, $method := .Methods}}
    {{$method.Name}}_Request:
      {{if gt (len .Inputs) 0}}properties:{{else}}type: object{{end}}
      {{- range $i, $input := .Inputs}}
        {{.Name}}:
          {{ template "fieldType" dict "Type" .Type "TypeMap" $typeMap "Indent" "          " }}
      {{- end -}}
    {{- end -}}
    {{- range $i, $method := .Methods}}
    {{$method.Name}}_Response:
      {{if gt (len .Outputs) 0}}properties:{{else}}type: object{{end}}
      {{- range $i, $output := .Outputs}}
        {{.Name}}:
          {{ template "fieldType" dict "Type" .Type "TypeMap" $typeMap "Indent" "          " }}
        {{- end -}}
      {{- end -}}
    {{- end}}

paths:
{{- range .Services -}}
{{- $serviceName:=.Name}}
  {{- range $i, $method := .Methods}}
  /rpc/{{$serviceName}}/{{.Name}}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{$method.Name}}_Request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{$method.Name}}_Response'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  {{- end -}}
{{- end -}}
{{- end -}}
