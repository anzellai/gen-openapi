# example v0.0.1 d089bd829be151a8b862d09f50e55f10b23e3c5f
# --
# Code generated by webrpc-gen@v0.7.0 with custom generator; DO NOT EDIT
# 
# webrpc-gen -schema=./proto.ridl -target=../ -out=./openapi.gen.yaml -Title=Example webrpc API -Version=v20.10.3 -ServerUrl=https://api.example.com -ServerDescription=Production
openapi: 3.0.0
info:
  title: 'Example webrpc API'
  version: 'v20.10.3'
servers:
  - url: 'https://api.example.com'
    description: 'Production'
components:
  schemas:
    empty:
      type: object
    error:
      properties:
        error:
          type: string
    Kind:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - USER
        - ADMIN
    User:
      type: object
      properties:
        id:
          type: number
        username:
          type: string
        role:
          type: string
    SearchFilter:
      type: object
      properties:
        q:
          type: string
    Version:
      type: object
      properties:
        webrpcVersion:
          type: string
        schemaVersion:
          type: string
        schemaHash:
          type: string
    ComplexType:
      type: object
      properties:
        meta:
          type: object
          description: 'map<string,any>'
          additionalProperties:
            type: object
        metaNestedExample:
          type: object
          description: 'map<string,map<string,uint32>>'
          additionalProperties:
            type: object
            description: 'map<string,uint32>'
            additionalProperties:
              type: number
        namesList:
          type: array
          description: '[]string'
          items:
            type: string
        numsList:
          type: array
          description: '[]int64'
          items:
            type: number
        doubleArray:
          type: array
          description: '[][]string'
          items:
            type: array
            description: '[]string'
            items:
              type: string
        listOfMaps:
          type: array
          description: '[]map<string,uint32>'
          items:
            type: object
            description: 'map<string,uint32>'
            additionalProperties:
              type: number
        listOfUsers:
          type: array
          description: '[]User'
          items:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/User'
        mapOfUsers:
          type: object
          description: 'map<string,User>'
          additionalProperties:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/User'
        user:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/User'
    GetUser_Request:
      properties:
        header:
          type: object
          description: 'map<string,string>'
          additionalProperties:
            type: string
        userID:
          type: number
    FindUser_Request:
      properties:
        s:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SearchFilter'
    ListUsers_Request:
      type: object
    GetComplex_Request:
      type: object
    GetUser_Response:
      properties:
        code:
          type: number
        user:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/User'
    FindUser_Response:
      properties:
        name:
          type: string
        user:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/User'
    ListUsers_Response:
      properties:
        users:
          type: array
          description: '[]User'
          items:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/User'
    GetComplex_Response:
      properties:
        complex:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComplexType'

paths:
  /rpc/ExampleService/GetUser:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUser_Request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_Response'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /rpc/ExampleService/FindUser:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindUser_Request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindUser_Response'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /rpc/ExampleService/ListUsers:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsers_Request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsers_Response'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /rpc/ExampleService/GetComplex:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComplex_Request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComplex_Response'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'